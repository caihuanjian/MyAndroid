apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.3.1'
}

//
//task makeJar(type: Copy) {
//    from('build/intermediates/bundles/release/')
//    into('build/libs/')
//    include('classes.jar')
//    rename ('classes.jar', 'sdk.jar')
//}
//
////task makeJar(type: Copy) {
////    delete 'build/libs/myjar.jar'
////    from('build/intermediates/bundles/release/')
////    into('build/libs/')
////    include('classes.jar')
////    rename('classes.jar', 'myjar.jar')
////}
//
////task makeJar(type: Jar) {
////    from file('build/intermediates/classes/release')
////    archiveName = 'sdk.jar'
////    destinationDir = file('build/libs')
////    //过滤不需要的class
////    exclude "**/**/BuildConfig.class"
////    exclude "**/**/BuildConfig\$*.class"
////    exclude "**/R.class"
////    exclude "**/R\$*.class"
////
////    //指定打包的class
////    include "com/test/**/*.class"
////}
//makeJar.dependsOn(build)
//
////  在终端执行生成JAR包
////  ./gradlew build
////build.finalizedBy makeJar
////  或者
//makeJar.dependsOn(build)
//// ./gradlew makeJar

task clearJar(type: Delete) {
    delete 'libs/sdk.jar'
}

task makeJar(type:org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    baseName 'sdk'
    //从哪里打包class文件
    from('build/intermediates/classes/release/com/example/guxiuzhong/librarydemo/')
    //打包到jar后的目录结构
    into('org/cmdmac/cloud/pluginsdk/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude{ it.name.startsWith('R$');}
}

makeJar.dependsOn(clearJar, build)