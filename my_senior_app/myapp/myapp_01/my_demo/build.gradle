apply plugin: 'com.android.application'
//apply plugin: 'com.jakewharton.butterknife'
// bugly 热更新依赖插件脚本
apply from: 'tinker-support.gradle'

apply from: "${project.rootDir}/config.gradle"


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "cn.yinxm.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        flavorDimensions "versionCode"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    signingConfigs {
        releaseSign {
            keyAlias 'myapp'
            keyPassword '12332177'
            storeFile file('../keystore/my.jks')
            storePassword '12332177'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSign
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "BUGLY_DEBUG", "false"
            // android 2.x打包
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    println "outputFile="+outputFile
//                    def apkFileName = "${releaseTime()}-base_demo-${defaultConfig.versionName}-release-${variant.flavorName}_sign.apk"
//                    output.outputFile = new File(outputFile.parent, apkFileName)
//                }
//            }
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${releaseTime()}-base_demo-${defaultConfig.versionName}-release-${variant.flavorName}_sign.apk"
//                    outputFileName = "driver_${variant.productFlavors[0].name}_v${variant.versionName}.apk"
                }
            }

        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSign
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "BUGLY_DEBUG", "false"
        }
    }
    //多渠道配置，WORK_EC_APPID为服务器生成的友盟渠道标识
    productFlavors {
        _Dev {//开发测试包，渠道值为默认渠道值，供平时开发测试阶段使用
            manifestPlaceholders = [APPID: "C26E57A7-0A35-4854-A77B-63C44087CC2F", app_name: "@string/app_name", icon: "@mipmap/ic_launcher"]
            applicationId "cn.yinxm.app"
        }
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize rootProject.ext.javaMaxHeapSize
        maxProcessCount = 4
        jumboMode = true
    }

    compileOptions {
        sourceCompatibility project.ext.sourceCompatibility
        targetCompatibility project.ext.targetCompatibility
    }

    aaptOptions {
        cruncherEnabled true
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }

//    splits {
//        abi {
//            enable = true
//            reset()
//            include 'armeabi'
//        }
//    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def time = new Date().format("yyyyMMddHHmm")
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                if (variant.buildType.name.equals('release')) {
//                    def fileName = "DuerOS-Auto-Lion-v${defaultConfig.versionName}-${time}.apk"
//
//                    output.outputFile = new File(outputFile.parent, fileName)
//                } else if (variant.buildType.name.equals('debug')) {
//                    def fileName = "DuerOS-Auto-Lion-v${defaultConfig.versionName}-Debug" + ".apk"
//                    output.outputFile = new File(outputFile.parent, fileName)
//                }
//            }
//        }
//    }

}
println "apkFileName1:"+project.name

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

task copyMapping (type: Copy) {
    doLast {
        from 'build/outputs/mapping/release/mapping.txt'
        into{'proguardLog/'}
        rename('mapping.txt','mapping'+ android.defaultConfig.versionCode +'.txt')
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:'+rootProject.ext.supportLib
//    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestImplementation 'junit:junit:4.12'

    implementation 'com.github.h4x0r139:Lib-Android:'+rootProject.ext.Lib_Android

    implementation 'com.jakewharton:butterknife:'+rootProject.ext.butterknife
    annotationProcessor 'com.jakewharton:butterknife-compiler:'+rootProject.ext.butterknife

    //异常上报
//    implementation 'com.tencent.bugly:crashreport:2.6.6'
    //app集成了第三方so库时使用
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    //升级sdk=升级 + 异常上报 + 热更新
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.4'
    //bugly热更新依赖multidex
    implementation 'com.android.support:multidex:1.0.1'
}

/// **********************下面的代码才是最主要的*************************
build {
    doLast {
        def fileName = "my_demo-_Dev-debug.apk"
        def fromFile = "./build/outputs/apk/" + fileName
        def intoFile = "./outapks/"


        def applicationId = android.defaultConfig.applicationId
        def versionName = android.defaultConfig.versionName
        def time = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new Date())
        def buildType = "realse"
        def channel = "site"


        def appName = "${applicationId}_v${versionName}_${time}_${buildType}_${channel}.apk"


        // copy --> rename
        copy {
            from fromFile
            into intoFile


            rename {
                appName
            }
        }


        println("=====================build.doLast success.=========================")
    }
}