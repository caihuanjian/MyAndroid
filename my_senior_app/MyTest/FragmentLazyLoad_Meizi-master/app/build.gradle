apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

def keyStore = file('gank.jks')
println '=======================  ' + keyStore.exists()
Properties properties = new Properties();
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.dasu.gank"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "GAND_SERVICE", '"http://gank.io/api/"'
        buildConfigField "String", "GITHUB_SERVICE", '"https://api.github.com/"'
        //使用 fir.im 做版本管理服务器
        buildConfigField "String", "VMS", '"http://api.fir.im/"'
        buildConfigField 'String', 'APPID', /"${properties.getProperty('APPID', '')}"/
        buildConfigField 'String', 'APITOKEN', /"${properties.getProperty('APITOKEN', '')}"/
    }

    signingConfigs {
        fir {
            def STOREPASS = properties.getProperty('STOREPASS')
            def KEYALIAS = properties.getProperty('KEYALIAS')
            def KEYPASS = properties.getProperty('KEYPASS')
            println "==================================="
            println "${STOREPASS}    ${KEYALIAS}       ${KEYPASS}"

            storeFile file('gank.jks')
            storePassword STOREPASS
            keyAlias KEYALIAS
            keyPassword KEYPASS
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            if (keyStore.exists()) {
                println 'gank.jks signing...'
                signingConfig signingConfigs.fir
            } else {
                println 'no gank.jks'
            }

            //对apk进行重命名
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "gank_v${defaultConfig.versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'org.greenrobot:greendao:3.1.0'
    compile 'org.greenrobot:greendao-generator:3.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.android.support:support-v4:25.2.0'
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.github.chrisbanes:PhotoView:2.0.0'
    debugCompile 'com.facebook.stetho:stetho:1.3.1'
}
